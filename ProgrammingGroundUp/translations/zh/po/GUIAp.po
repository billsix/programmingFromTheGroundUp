# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
msgid ""
msgstr ""
"Project-Id-Version: pgubook\n"
"POT-Creation-Date: 2006-05-15 16:01+0800\n"
"PO-Revision-Date: 2006-07-30 01:24+0800\n"
"Last-Translator: Zhang Le <robert.zhangle@gmail.com>\n"
"Language-Team: zh_CN <robert.zhangle@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Pootle 0.10beta3\n"

# type: Content of: <appendix><title>
#: ../../GUIAp.xml:2
#, no-wrap
msgid "GUI Programming"
msgstr "GUI编程"

# type: Content of: <appendix><simplesect><title>
#: ../../GUIAp.xml:16
#, no-wrap
msgid "Introduction to GUI Programming"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:19
msgid ""
"The purpose of this appendix is not to teach you how to do Graphical User "
"Interfaces.  It is simply meant to show how writing graphical applications "
"is the same as writing other applications, just using an additional library "
"to handle the graphical parts.  As a programmer you need to get used to "
"learning new libraries.  Most of your time will be spent passing data from "
"one library to another."
msgstr ""

# type: Content of: <appendix><simplesect><title>
#: ../../GUIAp.xml:31
#, no-wrap
msgid "The GNOME Libraries"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:34
msgid "The GNOME<indexterm>"
msgstr ""

# type: Content of: <appendix><simplesect><para><primary>
#: ../../GUIAp.xml:34
#, no-wrap
msgid "GNOME"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:34
msgid ""
"</indexterm> projects is one of several projects to provide a complete "
"desktop to Linux users.  The GNOME project includes a panel to hold "
"application launchers and mini-applications called applets, several standard "
"applications to do things such as file management, session management, and "
"configuration, and an API for creating applications which fit in with the "
"way the rest of the system works."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:44
msgid ""
"One thing to notice about the GNOME libraries is that they constantly create "
"and give you pointers to large data structures, but you never need to know "
"how they are laid out in memory.  All manipulation of the GUI data "
"structures are done entirely through function calls.  This is a "
"characteristic of good library design.  Libraries change from version to "
"version, and so does the data that each data structure holds.  If you had to "
"access and manipulate that data yourself, then when the library is updated "
"you would have to modify your programs to work with the new library, or at "
"least recompile them.  When you access the data through functions, the "
"functions take care of knowing where in the structure each piece of data "
"is.  The pointers you receive from the library are "
"<emphasis>opaque</emphasis> - you don't need to know specifically what the "
"structure they are pointing to looks like, you only need to know the "
"functions that will properly manipulate it.  When designing libraries, even "
"for use within only one program, this is a good practice to keep in mind."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:66
msgid ""
"This chapter will not go into details about how GNOME works.  If you would "
"like to know more, visit the GNOME developer web site at "
"http://developer.gnome.org/.  This site contains tutorials, mailing lists, "
"API documentation, and everything else you need to start programming in the "
"GNOME environment."
msgstr ""

# type: Content of: <appendix><simplesect><title>
#: ../../GUIAp.xml:77
#, no-wrap
msgid "A Simple GNOME Program in Several Languages"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:80
msgid ""
"This program will simply show a Window that has a button to quit the "
"application.  When that button is clicked it will ask you if you are sure, "
"and if you click yes it will close the application.  To run this program, "
"type in the following as <filename>gnome-example.s</filename>:"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:90
msgid "To build this application, execute the following commands:"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:98
msgid "Then type in <literal>./gnome-example</literal> to run it."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:102
msgid "This program, like most GUI<indexterm>"
msgstr ""

# type: Content of: <appendix><simplesect><para><primary>
#: ../../GUIAp.xml:102
#, no-wrap
msgid "GUI"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:102
msgid ""
"</indexterm> programs, makes heavy use of passing pointers to functions as "
"parameters.  In this program you create widgets with the GNOME functions and "
"then you set up functions to be called when certain events happen.  These "
"functions are called <emphasis>callback</emphasis> functions.  All of the "
"event processing is handled by the function <literal>gtk_main</literal>, so "
"you don't have to worry about how the events are being processed.  All you "
"have to do is have callbacks set up to wait for them."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:115
msgid ""
"Here is a short description of all of the GNOME functions that were used in "
"this program:"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:121
#, no-wrap
msgid "gnome_init"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:123
msgid ""
"Takes the command-line arguments, argument count, application id, and "
"application version and initializes the GNOME libraries."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:130
#, no-wrap
msgid "gnome_app_new"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:132
msgid ""
"Creates a new application window, and returns a pointer to it.  Takes the "
"application id and the window title as arguments."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:138
#, no-wrap
msgid "gtk_button_new_with_label"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:140
msgid ""
"Creates a new button and returns a pointer to it.  Takes one argument - the "
"text that is in the button."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:146
#, no-wrap
msgid "gnome_app_set_contents"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:148
msgid ""
"This takes a pointer to the gnome application window and whatever widget you "
"want (a button in this case) and makes the widget be the contents of the "
"application window"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:155
#, no-wrap
msgid "gtk_widget_show"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:157
msgid ""
"This must be called on every widget created (application window, buttons, "
"text entry boxes, etc) in order for them to be visible.  However, in order "
"for a given widget to be visible, all of its parents must be visible as "
"well."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:166
#, no-wrap
msgid "gtk_signal_connect"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:168
msgid ""
"This is the function that connects widgets and their signal handling "
"callback functions.  This function takes the widget pointer, the name of the "
"signal, the callback function, and an extra data pointer.  After this "
"function is called, any time the given event is triggered, the callback will "
"be called with the widget that produced the signal and the extra data "
"pointer.  In this application, we don't use the extra data pointer, so we "
"just set it to NULL, which is 0."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:181
#, no-wrap
msgid "gtk_main"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:183
msgid ""
"This function causes GNOME to enter into its main loop.  To make application "
"programming easier, GNOME handles the main loop of the program for us.  "
"GNOME will check for events and call the appropriate callback functions when "
"they occur.  This function will continue to process events until "
"<literal>gtk_main_quit</literal> is called by a signal handler."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:194
#, no-wrap
msgid "gtk_main_quit"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:196
msgid ""
"This function causes GNOME to exit its main loop at the earliest "
"opportunity."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:202
#, no-wrap
msgid "gnome_message_box_new"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:204
msgid ""
"This function creates a dialog window containing a question and response "
"buttons.  It takes as parameters the message to display, the type of message "
"it is (warning, question, etc), and a list of buttons to display.  The final "
"parameter should be NULL to indicate that there are no more buttons to "
"display."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:213
#, no-wrap
msgid "gtk_window_set_modal"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:215
msgid ""
"This function makes the given window a modal window.  In GUI programming, a "
"modal window is one that prevents event processing in other windows until "
"that window is closed.  This is often used with Dialog windows."
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><term>
#: ../../GUIAp.xml:223
#, no-wrap
msgid "gnome_dialog_run_and_close"
msgstr ""

# type: Content of: <appendix><simplesect><para><variablelist><varlistentry><listitem><para>
#: ../../GUIAp.xml:225
msgid ""
"This function takes a dialog pointer (the pointer returned by "
"<literal>gnome_message_box_new</literal> can be used here) and will set up "
"all of the appropriate signal handlers so that it will run until a button is "
"pressed.  At that time it will close the dialog and return to you which "
"button was pressed.  The button number refers to the order in which the "
"buttons were set up in <literal>gnome_message_box_new</literal>."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:240
msgid ""
"The following is the same program written in the C language.  Type it in as "
"<filename>gnome-example-c.c</filename>:"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:247
msgid "To compile it, type"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:254
msgid "Run it by typing <literal>./gnome-example-c</literal>."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:258
msgid "Finally, we have a version in Python.  Type it in as gnome-example.py:"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:264
msgid "To run it type <literal>python gnome-example.py</literal>."
msgstr ""

# type: Content of: <appendix><simplesect><title>
#: ../../GUIAp.xml:270
#, no-wrap
msgid "GUI Builders"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:273
msgid ""
"In the previous example, you have created the user-interface for the "
"application by calling the create functions for each widget and placing it "
"where you wanted it.  However, this can be quite burdensome for more complex "
"applications.  Many programming environments, including GNOME, have programs "
"called GUI builders that can be used to automatically create your GUI for "
"you.  You just have to write the code for the signal handlers and for "
"initializing your program.  The main GUI builder<indexterm>"
msgstr ""

# type: Content of: <appendix><simplesect><para><primary>
#: ../../GUIAp.xml:281
#, no-wrap
msgid "GUI builder"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:281
msgid ""
"</indexterm> for GNOME applications is called GLADE.  GLADE ships with most "
"Linux distributions."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:286
msgid ""
"There are GUI builders for most programming environments.  Borland has a "
"range of tools that will build GUIs quickly and easily on Linux and "
"Win32<indexterm>"
msgstr ""

# type: Content of: <appendix><simplesect><para><primary>
#: ../../GUIAp.xml:288
#, no-wrap
msgid "Win32"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:288
msgid ""
"</indexterm> systems.  The KDE environment has a tool called QT "
"Designer<indexterm>"
msgstr ""

# type: Content of: <appendix><simplesect><para><primary>
#: ../../GUIAp.xml:289
#, no-wrap
msgid "QT Designer"
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:289
msgid "</indexterm> which helps you automatically develop the GUI for their system."
msgstr ""

# type: Content of: <appendix><simplesect><para>
#: ../../GUIAp.xml:294
msgid ""
"There is a broad range of choices for developing graphical applications, but "
"hopefully this appendix gave you a taste of what GUI programming is like."
msgstr ""
